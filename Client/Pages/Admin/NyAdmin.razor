@page "/nyadmin"
@inject NavigationManager navigationManager
@inject HttpClient Http
@using Core
<AdminRestriction></AdminRestriction>
<h3>Tilføj Ny Bruger</h3>
<EditForm EditContext="@aEditContext" class="row p-3" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row" style="margin-bottom: 30px">
        <div class="col-md-6 mb-3">
                    <label for="fullName">Navn</label>
                    <InputText id="Password" @bind-Value="_newAdministrater.Name" class="form-control" />
        </div>
        <div class="col-md-3 mb-3">
            <label for="phoneNumber">Telefonnummer</label>
            <InputNumber id="phoneNumber" @bind-Value="_newAdministrater.PhoneNumber" class="form-control"/>
        </div>
        <div class="col-md-3 mb-3">
            <label for="memberNumber">Krævnummer</label>
            <InputNumber id="KrævNumber" @bind-Value="_newAdministrater.KrævNumber" class="form-control"/>
        </div>
        <div class="col-md-6 mb-3">
            <label for="email">Email</label>
            <InputText id="email" @bind-Value="_newAdministrater.Email" class="form-control"/>
        </div>
        <div class="col-md-3 mb-3">
            <label for="password">Adgangskode</label>
            <InputText id="Password" @bind-Value="_newAdministrater.Password" class="form-control"/>
        </div>
        <div class="col-md-3 mb-3">
                    <label for="role">Bruger rolle</label>
                    <InputSelect id="role" @bind-Value="_newAdministrater.Role" class="form-control">
                        @if(_newAdministrater.Role == null){<option value="" disabled selected></option>}
                        <option value="Standard">Standard bruger</option>
                        <option value="Administrator">Administrator</option>
                    </InputSelect>
                    
        </div>
        <div class="col-md-6 mb-3">
            <label for="Image">Billede</label>
            <InputFile id="image" @bind-Value="_newAdministrater.Image" OnChange="HandleFileUpload" accept="image/jpeg" class="form-control"/>
        </div>
    </div>

    <div>
        <button type="submit" class="btn btn-success" style="margin-top: 10px">Tilføj bruger</button>
    </div>
    </EditForm>
    
    @code {
    // Initialiserer en ny administrator instans.
    Administrator _newAdministrater = new();

    // Variabel til at håndtere formularindsendelse og validering.
    private EditContext aEditContext;

    // Metode kaldet ved komponentinitialisering.
    protected override void OnInitialized()
    {
        // Initialiserer EditContext med den nye administrator objektet.
        aEditContext = new EditContext(_newAdministrater);
    }

    // Asynkron metode til at håndtere gyldig formularindsendelse.
    public async Task HandleValidSubmit()
    {
        // Sender en POST-anmodning til API'et for at oprette en ny administrator.
        await Http.PostAsJsonAsync<Administrator>($"https://localhost:7026/api/admin/create", _newAdministrater);

        // Navigerer til "brugeroversigt" siden ved succes.
        navigationManager.NavigateTo($"brugeroversigt");
    }

    // Asynkron metode til at håndtere filupload.
    private async Task HandleFileUpload(InputFileChangeEventArgs image)
    {
        // Henter den uploadede fil.
        var file = image.File; // Henter filen fra input.

        // Opretter en buffer til at læse filen ind.
        var buffer = new byte[file.Size]; // Opretter en "beholder"/buffer med samme størrelse som filen, hvor vi kan gemme filens data.

        // Læser filen ind i buffer.
        await file.OpenReadStream().ReadAsync(buffer); // Læser filen ind i bufferen.

        // Konverterer bufferen til en Base64-kodet streng.
        var imageString = Convert.ToBase64String(buffer); // Konverterer bufferen til en base64 string.

        // Gemmer Base64-strengen i administrator objektet.
        _newAdministrater.Image = imageString; // Gemmer base64 stringen i listing objektet.
    }

}