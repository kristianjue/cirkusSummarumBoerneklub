@page "/eventoversigt"
@inject HttpClient Http
@using Core

<PageTitle>System Settings Overview</PageTitle>

<h1 class="text-center">System Settings Overview</h1>

@if (systemSettingsList == null)
{
    <p>Loading...</p>
}
else if (!systemSettingsList.Any())
{
    <p>No events found.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>By</th>
                <th>Åben for ansøgning</th>
                <th>Uge</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var settings in systemSettingsList)
            {
                <tr>
                    <td>@settings.Locations.FirstOrDefault()?.City</td>
                    <td>@(settings.OpenForRegistration ? "Ja" : "Nej")</td>
                    <td>
                        <a class="btn btn-primary" href="/edit-systemsettings/@settings.Id">Rediger</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<SystemSettings> systemSettingsList;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            systemSettingsList = await Http.GetFromJsonAsync<List<SystemSettings>>("https://localhost:7026/api/systemsettings/getall");
            Console.WriteLine($"System Settings Loaded: {System.Text.Json.JsonSerializer.Serialize(systemSettingsList)}");

            // Additional check to see if data is empty
            if (systemSettingsList == null || !systemSettingsList.Any())
            {
                Console.WriteLine("No system settings found.");
            }
            else
            {
                foreach (var settings in systemSettingsList)
                {
                    Console.WriteLine($"System Setting: Id={settings.Id}, OpenForRegistration={settings.OpenForRegistration}");
                    foreach (var location in settings.Locations)
                    {
                        Console.WriteLine($"Location: City={location.City}");
                    }
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading system settings: {ex.Message}");
        }
    }
}
