@page "/edit-application/{applicationId}"
@using Core
@inject NavigationManager navigationManager
@inject HttpClient Http
@inject IJSRuntime JSRuntime
<AdminRestriction></AdminRestriction>
<PageTitle>Rediger Ansøgning</PageTitle>

<h1>Rediger Ansøgning</h1>

<h3>Forældre:</h3>

<EditForm EditContext="@aEditContext" class="row p-3" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row" style="margin-bottom: 30px">
        <div class="col-md-6 mb-3">
            <label for="fullName">Fulde navn</label>
            <InputText id="fullName" @bind-Value="_existingApplication.Volunteer.Name" class="form-control" />
        </div>
        <div class="col-md-6 mb-3">
            <label for="email">Email</label>
            <InputText id="email" @bind-Value="_existingApplication.Volunteer.Email" class="form-control" />
        </div>
        <div class="col-md-6 mb-3">
            <label for="phoneNumber">Telefonnummer</label>
            <InputNumber id="phoneNumber" @bind-Value="_existingApplication.Volunteer.PhoneNumber" class="form-control" />
        </div>
        <div class="col-md-6 mb-3">
            <label for="memberNumber">Krævnummer</label>
            <InputNumber id="memberNumber" @bind-Value="_existingApplication.Volunteer.KrævNumber" class="form-control" />
        </div>
    </div>

    @foreach (var child in _existingApplication.Volunteer.Children)
    {
        <h3>Barn @(child == _existingApplication.Volunteer.Children.First() ? 1 : 2):</h3>
        <div class="row" style="margin-bottom: 30px">
            <div class="col-md-3 mb-3">
                <label for="kidName">Barnets navn</label>
                <InputText id="kidName" @bind-Value="child.Name" class="form-control" />
            </div>
            <div class="col-md-3 mb-3">
                <label for="kidAge">Alder</label>
                <InputSelect id="kidAge" @bind-Value="child.Age" class="form-control">
                    <option value="5">5 år</option>
                    <option value="6">6 år</option>
                    <option value="7">7 år</option>
                    <option value="8">8 år</option>
                    <option value="9">9 år</option>
                    <option value="10">10 år</option>
                    <option value="11">11 år</option>
                    <option value="12">12 år</option>
                    <option value="13">13 år</option>
                    <option value="14">14 år</option>
                    <option value="15">15 år</option>
                </InputSelect>
            </div>
            <div class="col-md-3 mb-3">
                <label for="kidSize">T-shirt størrelse</label>
                <InputSelect id="kidSize" @bind-Value="child.Size" class="form-control">
                    <option value="XXS">XXS</option>
                    <option value="XS">XS</option>
                    <option value="S">S</option>
                    <option value="M">M</option>
                    <option value="L">L</option>
                    <option value="XL">XL</option>
                </InputSelect>
            </div>
            <div class="col-md-3 mb-3">
                <label for="beenThereBefore">Har været med før?</label>
                <InputSelect id="beenThereBefore" @bind-Value="child.beenThereBefore" class="form-control">
                    <option value="Nej">Nej</option>
                    <option value="Ja">Ja</option>
                </InputSelect>
            </div>
            <div class="col-md-6 mb-3">
                <label for="comment">Kommentar</label>
                <InputTextArea id="comment" @bind-Value="child.comment" class="form-control" placeholder="Diagnoser, allergener samt evt. hensyn"></InputTextArea>
            </div>
            <div class="col-md-6 mb-3">
                <label for="interests">Interesser</label>
                <InputTextArea id="interests" @bind-Value="child.interests" class="form-control" placeholder="F.eks. sport, musik, læsning..."></InputTextArea>
            </div>
        @if (_existingApplication.Volunteer.Children.Count >= 2)
        {
            <div class="col-12 text-end">
                <button type="button" class="btn btn-danger" @onclick="() => RemoveChild(child)">Fjern barn</button>
            </div>
        }
        </div>
    }

    @if (_existingApplication.Volunteer.Children.Count < 2)
    {
        <div class="row" style="margin-bottom: 50px; text-align: center">
            <div class="col-12">
                <button type="button" class="btn btn-primary" @onclick="AddChild" style="margin-top: 10px">Tilføj barn</button>
            </div>
        </div>
    }

    <h3>Pasnings Ønske - 1. prioritet</h3>
    <div class="row" style="margin-bottom: 30px">
        <div class="col-md-6 mb-3">
            <label for="city1">By</label>
            <InputSelect id="city1" @bind-Value="_selectedCityId1" class="form-control">
                @if (_cities != null)
                {
                    @foreach (var city in _cities)
                    {
                        <option value="@city.Name">@city.Name</option>
                    }
                }
            </InputSelect>
            <button type="button" class="btn btn-primary" @onclick="OnCityChanged">Vælg By</button>
        </div>
        <div class="col-md-6 mb-3">
            <label for="Priority1">Periode</label>
            <InputSelect id="Priority1" @bind-Value="_existingApplication.Priority1" class="form-control">
                @if (_filteredPeriodsFirst != null && _filteredPeriodsFirst.Any())
                {
                    @foreach (var period in _filteredPeriodsFirst)
                    {
                        <option value="@period.PeriodName">@period.PeriodName</option>
                    }
                }
                else
                {
                    <option value="">No periods available</option>
                }
            </InputSelect>
        </div>
    </div>

    @if (_showSecondPriority)
    {
        <h3>Pasnings Ønske - 2. prioritet</h3>
        <div class="row" style="margin-bottom: 30px">
            <div class="col-md-6 mb-3">
                <label for="city2">By</label>
                <InputSelect id="city2" @bind-Value="_selectedCityId2" class="form-control">
                    @if (_cities != null)
                    {
                        @foreach (var city in _cities)
                        {
                            <option value="@city.Name">@city.Name</option>
                        }
                    }
                }
                </InputSelect>
                <button type="button" class="btn btn-primary" @onclick="OnSecondaryCityChanged">Vælg By</button>
            </div>
            <div class="col-md-6 mb-3">
                <label for="Priority2">Periode</label>
                <InputSelect id="Priority2" @bind-Value="_existingApplication.Priority2" class="form-control">
                    @if (_filteredPeriodsSecond != null && _filteredPeriodsSecond.Any())
                    {
                        @foreach (var period in _filteredPeriodsSecond)
                        {
                            <option value="@period.PeriodName">@period.PeriodName</option>
                        }
                    }
                    else
                    {
                        <option value="">No periods available</option>
                    }
                    }
                </InputSelect>
            </div>
            <div class="col-12 text-center">
                <button type="button" class="btn btn-danger" @onclick="HideSecondPriority">Fjern 2. prioritet</button>
            </div>
        </div>
    }
    else
    {
        <div style="margin-bottom: 50px">
            <button type="button" class="btn btn-secondary" @onclick="ShowSecondPriority">Tilføj 2. prioritet</button>
        </div>
    }

    <div class="row" style="margin-bottom: 50px; text-align: center">
        <div class="col-12 mb-3">
            <br />
            <button type="submit" class="btn btn-success" style="margin-top: 10px">Opdater ansøgning</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public string applicationId { get; set; }
    private Application _existingApplication = new Application
        {
            Volunteer = new Volunteer
            {
                Children = new List<Child> { new Child() }
            }
        };
    private EditContext aEditContext;
    private List<City> _cities = new List<City>();
    private string _selectedCityId1;
    private string _selectedCityId2;
    private List<Period> _filteredPeriodsFirst = new();
    private List<Period> _filteredPeriodsSecond = new();
    private bool _showSecondPriority = false;

    protected override async Task OnInitializedAsync()
    {
        aEditContext = new EditContext(_existingApplication);
        await LoadCities();
        await LoadApplicationData();
        aEditContext = new EditContext(_existingApplication);
    }

    private async Task LoadCities()
    {
        try
        {
            _cities = await Http.GetFromJsonAsync<List<City>>("https://localhost:7026/api/City/getall");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading cities: {ex.Message}");
        }
    }

    private async Task LoadApplicationData()
    {
        try
        {
            _existingApplication = await Http.GetFromJsonAsync<Application>($"https://localhost:7026/api/application/get/{applicationId}");
            _selectedCityId1 = _existingApplication.City?.Name;
            if (!string.IsNullOrEmpty(_selectedCityId1))
            {
                OnCityChanged();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching application data: {ex.Message}");
        }
    }

    private void OnCityChanged()
    {
        var selectedCity = _cities.FirstOrDefault(city => city.Name == _selectedCityId1);
        if (selectedCity != null)
        {
            _existingApplication.City = selectedCity;
            _filteredPeriodsFirst = selectedCity.Weeks.SelectMany(week => week.Periods).ToList();
            _filteredPeriodsSecond = _filteredPeriodsFirst;
        }
        else
        {
            _filteredPeriodsFirst.Clear();
            _filteredPeriodsSecond.Clear();
        }
    }

    private void OnSecondaryCityChanged()
    {
        var selectedCity = _cities.FirstOrDefault(city => city.Name == _selectedCityId2);
        if (selectedCity != null)
        {
            _filteredPeriodsSecond = selectedCity.Weeks.SelectMany(week => week.Periods).ToList();
        }
        else
        {
            _filteredPeriodsSecond.Clear();
        }
    }

    private void ShowSecondPriority()
    {
        _showSecondPriority = true;
    }

    private void HideSecondPriority()
    {
        _showSecondPriority = false;
        _existingApplication.Priority2 = null;
        _selectedCityId2 = null;
        _filteredPeriodsSecond.Clear();
    }

    public async Task HandleValidSubmit()
    {
        var response = await Http.PutAsJsonAsync($"https://localhost:7026/api/application/update/{applicationId}", _existingApplication);
        if (response.IsSuccessStatusCode)
        {
            navigationManager.NavigateTo("/oversigt");
        }
        else
        {
            var responseContent = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Failed to update application: {response.StatusCode} - {responseContent}");
        }
    }

    public void AddChild()
    {
        if (_existingApplication.Volunteer.Children.Count < 2)
        {
            _existingApplication.Volunteer.Children.Add(new Child());
        }
    }

    public void RemoveChild(Child child)
    {
        _existingApplication.Volunteer.Children.Remove(child);
    }
}

